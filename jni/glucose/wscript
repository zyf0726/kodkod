#! /usr/bin/env python
# encoding: utf-8

import shutil, subprocess, os

def options(opt):
    opt.load('compiler_cxx')
    opt.load('java')

def configure(conf):
    conf.load('compiler_cxx')
    conf.load('java')
    conf.check_jni_headers()
    root = conf.path.abspath()
    GLUCOSE = root + '/glucose'
    shutil.rmtree(GLUCOSE, True)
    subprocess.check_call(['git', 'clone', 'https://github.com/audemard/glucose.git', GLUCOSE])
    subprocess.check_call(['patch', '-p0', '-d', GLUCOSE + '/core/', '-i', root + '/Solver.patch'])

def build(bld):
    
    DEFINES = ['__STDC_LIMIT_MACROS', '__STDC_FORMAT_MACROS']
    INCLUDES = ['.','./glucose'] 
    CXXFLAGS = [ '-w', '-O3', '-fPIC']

    bld.objects(source = ['glucose/utils/Options.cc', 'glucose/utils/System.cc'],
                target = 'glucose-utils',
                includes = INCLUDES, cxxflags = CXXFLAGS, defines = DEFINES)
    
    bld.objects(source = ['glucose/core/lcm.cc', 'glucose/core/Solver.cc'],
                target = 'glucose-core', use = 'glucose-utils',
                includes = INCLUDES, cxxflags = CXXFLAGS, defines = DEFINES)
    
    bld.shlib(source = 'kodkod_engine_satlab_Glucose.cpp',
              target = 'glucose', use = 'glucose-core', uselib = 'JAVA',
              includes = INCLUDES, cxxflags = CXXFLAGS, defines = DEFINES)
    
def distclean(ctx):
    from waflib import Scripting
    Scripting.distclean(ctx)
    shutil.rmtree(ctx.path.abspath() + '/glucose', True)

